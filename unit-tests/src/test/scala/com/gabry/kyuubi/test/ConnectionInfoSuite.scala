package com.gabry.kyuubi.test

import com.gabry.kyuubi.driver.ConnectionInfo
import com.gabry.kyuubi.driver.exception.JdbcUrlParseException
import org.scalatest.funsuite.AnyFunSuite

class ConnectionInfoSuite extends AnyFunSuite {
  test("invalid jdbc url") {
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:kyuubis//"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:hive2//"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:hive//"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:kyuubi://user:password"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:kyuubi://user:password@"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:kyuubi://host:port"))
    assertThrows[JdbcUrlParseException](ConnectionInfo.parse("jdbc:kyuubi://host:123,host:sss"))
    val connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert(connectionInfo.getUser == null)
    assert(connectionInfo.getPassword == null)
    assert(0 == connectionInfo.getHosts.length)
    assert(connectionInfo.getDbName == null)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)
  }
  test("valid jdbc url") {
    var connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://localhost:1203")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert(connectionInfo.getUser == null)
    assert(null == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)

    assert(1 == connectionInfo.getHosts.length)


    assert("localhost" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert(null == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://local-host.name:1203")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert(null == connectionInfo.getUser)
    assert(null == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(1 == connectionInfo.getHosts.length)
    assert("local-host.name" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert(null == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://localhost1:1203,localhost2")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert(null == connectionInfo.getUser)
    assert(null == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert(null == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user@localhost1:1203,localhost2")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert(null == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert(null == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert(null == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(connectionInfo.getSessionConfigs.isEmpty)
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name;sessKey1=sessValue1")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(null != connectionInfo.getSessionConfigs)
    assert(1 == connectionInfo.getSessionConfigs.size)
    assert("sessValue1" == connectionInfo.getSessionConfigs.get("sessKey1"))
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name;sessKey1=sessValue1;sessKey2=sessValue2")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(null != connectionInfo.getSessionConfigs)
    assert(2 == connectionInfo.getSessionConfigs.size)
    assert("sessValue1" == connectionInfo.getSessionConfigs.get("sessKey1"))
    assert("sessValue2" == connectionInfo.getSessionConfigs.get("sessKey2"))
    assert(connectionInfo.getEngineConfigs.isEmpty)

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name;sessKey1=sessValue1;sessKey2=sessValue2?engineKey=engineValue")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(null != connectionInfo.getSessionConfigs)
    assert(2 == connectionInfo.getSessionConfigs.size)
    assert("sessValue1" == connectionInfo.getSessionConfigs.get("sessKey1"))
    assert("sessValue2" == connectionInfo.getSessionConfigs.get("sessKey2"))
    assert(null != connectionInfo.getEngineConfigs)
    assert(1 == connectionInfo.getEngineConfigs.size)
    assert("engineValue" == connectionInfo.getEngineConfigs.get("engineKey"))

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name;sessKey1=sessValue1;sessKey2=sessValue2?engineKey1=engineValue1;engineKey2=engineValue2")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(null != connectionInfo.getSessionConfigs)
    assert(2 == connectionInfo.getSessionConfigs.size)
    assert("sessValue1" == connectionInfo.getSessionConfigs.get("sessKey1"))
    assert("sessValue2" == connectionInfo.getSessionConfigs.get("sessKey2"))
    assert(null != connectionInfo.getEngineConfigs)
    assert(2 == connectionInfo.getEngineConfigs.size)
    assert("engineValue1" == connectionInfo.getEngineConfigs.get("engineKey1"))
    assert("engineValue2" == connectionInfo.getEngineConfigs.get("engineKey2"))

    connectionInfo = ConnectionInfo.parse("jdbc:kyuubi://user:passwd@localhost1:1203,localhost2/db_name;sessKey1=sessValue1;sessKey2=sessValue2?engineKey1=engineValue1;engineKey2=engineValue2#engineVar1=engineValue1")
    assert("jdbc:kyuubi" == connectionInfo.getSchema)
    assert("user" == connectionInfo.getUser)
    assert("passwd" == connectionInfo.getPassword)
    assert(null != connectionInfo.getHosts)
    assert(2 == connectionInfo.getHosts.length)
    assert("localhost1" == connectionInfo.getHosts()(0).getHost)
    assert(null != connectionInfo.getHosts()(0).getPort)
    assert(1203 == connectionInfo.getHosts()(0).getPort.intValue)
    assert("localhost2" == connectionInfo.getHosts()(1).getHost)
    assert(null == connectionInfo.getHosts()(1).getPort)
    assert("db_name" == connectionInfo.getDbName)
    assert(null != connectionInfo.getSessionConfigs)
    assert(2 == connectionInfo.getSessionConfigs.size)
    assert("sessValue1" == connectionInfo.getSessionConfigs.get("sessKey1"))
    assert("sessValue2" == connectionInfo.getSessionConfigs.get("sessKey2"))
    assert(null != connectionInfo.getEngineConfigs)
    assert(2 == connectionInfo.getEngineConfigs.size)
    assert("engineValue1" == connectionInfo.getEngineConfigs.get("engineKey1"))
    assert("engineValue2" == connectionInfo.getEngineConfigs.get("engineKey2"))

    assert(1 == connectionInfo.getEngineVars.size)
    assert("engineValue1" == connectionInfo.getEngineVars.get("engineVar1"))
  }
}
